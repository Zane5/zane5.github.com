<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Zane Zheng Blog]]></title>
  <link href="http://Zane5.github.com/atom.xml" rel="self"/>
  <link href="http://Zane5.github.com/"/>
  <updated>2013-04-29T16:14:37+08:00</updated>
  <id>http://Zane5.github.com/</id>
  <author>
    <name><![CDATA[Zane Zheng]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Rails 3 in Action 随记003]]></title>
    <link href="http://Zane5.github.com/blog/2013/04/28/rails-3-in-action-sui-ji-003/"/>
    <updated>2013-04-28T14:13:00+08:00</updated>
    <id>http://Zane5.github.com/blog/2013/04/28/rails-3-in-action-sui-ji-003</id>
    <content type="html"><![CDATA[<p><strong><em>第一章，第二章，是在阅读过若干rails书籍和文献之后，再仔细阅读，被称为呆丸章</em></strong></p>

<h1>第三章</h1>

<h2>3.1 Appication Setup</h2>

<p>此节介绍使用Guthub.com, 基本的git命令，输入无虞。
继而介绍Gemfile文件，此文件是定义相关gem包的地方。
数据库的配置文件，选择主流数据库的配置写法</p>

<h2>3.2 First steps</h2>

<h3>3.2.1 Creating project</h3>

<p>主要使用Cucumber，这里介绍的很详细，写一个简单的 creating_projects.feature 据此完善相关代码，每一步，以及每一步的why，均有说明。</p>

<ol>
<li>rake 数据库，生成schema.rb</li>
<li><p>写 step_definitions 这里生成一个文件web_steps.rb，用此文件的方法，已经被新版本的cucumber抛弃，无碍，在 /features/step_defintions/下面生成project_steps.rb:</p>

<pre><code> Given /^I am on the homepage$/ do
     visit "/"
 end

 When /^I follow "([^"]*)"$/ do |link|
     click_link link
 end

 When /^I fill in "([^"]*)" with "([^"]*)"$/ do |field, value|
     fill_in field, :with =&gt; value
 end

 When /^I press "([^"]*)"$/ do |button|
     click_button(button)
 end

 Then /^I should see "([^"]*)"$/ do |content|
     page.should have_content(content)
 end

 Then /^I should be on the project page for "([^"]*)"$/ do |name|
     project_path(Project.find_by_name!(name))
 end
</code></pre></li>
<li><p>NavigationHelper 在features/support/paths.rb定义Capybara的浏览器，访问的/</p></li>
<li>config/routes.rb配置项目路由</li>
<li><p>生成controller:</p>

<pre><code> rails g controller projects
</code></pre></li>
<li><p>helper, erb概念</p></li>
<li><p>安装 rspec 定义an RSpec controller spec  在</p>

<pre><code> spec/controllers/projects_controller_spec.rb
</code></pre></li>
<li><p>在controller中定义一个method 叫 index. 以及其相关的erb.在检查，少链接，使用link_to的method生成&lt;a> tag 和 href</p></li>
</ol>


<h3>3.2.2 RESTful routing</h3>

<ol>
<li>主要的文件是，配置文件config/routes.rb。这里介绍了RESTful原理，resourse的概念，生成一堆rul相关代码的方法。</li>
<li>cucumber的运行结果，书本描述的是老版本，即，现代不也一样喽，可以使用旧版的，也可以使用新版的，我用了后者。</li>
<li>这里需要生成相应的model,改db/migrate/[date]_create_projects.rb文件，这里也介绍了版本区别。</li>
<li><p>引入partial概念，生成一个partial文件,这里有详细描述内部参数及渲染过程，重点内容。</p>

<pre><code>     app/views/projects/_form.html.erb       
</code></pre></li>
<li><p>code:</p>

<pre><code>     HashWithIndifferentAccess, 
     paramshash, :commit(:controller), :action, :project(HashWithIdifferentAccess)
     @project.save
     redriector_to method
     project_path(@project)
</code></pre></li>
<li><p>show action</p>

<pre><code> app/controller/project_controller.rb
 app/view/projects/show.html.erb

 stylesheet javascript csrf
</code></pre></li>
<li><p>flash[:notice]</p></li>
</ol>


<h3>3.2.3 committing changes</h3>

<p>git的commit</p>

<h3>3.2.4 setting a page titel</h3>

<ol>
<li><p>先写了两句scenario，features/creating_projects.feature,第一句确定ProjectsController的show action, 第二句检查默认path中的内容。</p></li>
<li><p>需要增加一个mapping，featrue/support/paths.rb 这里易经定义过/, 增加的是project_path; 这里用正则表达式捕获，存到$1内，在给project_path使用</p></li>
<li><p>当没有找到find_by_name!时候，调用method_missing, 进而ActiveRecord::RecordNotFound, 是否使用带bang的函数，测试返回的数据是不同的,</p></li>
<li><p>默认找到的是show action， 但还需要 :id 参数. double check,检查两个返</p></li>
<li><p>找不到content？，定位feature/creating_projects.feature, 检查内容。所以添加咋app/view/projects/show.html.erb, app/view/layouts/application.html.erb</p></li>
<li>helper, 用来设置变量，app/heloper/application_helper.rb, 定义title 其参数*part参数会as an array，然后修改一下相关的设置，使得这个函数生成结果表现出来。</li>
</ol>


<h3>3.2.5 Validations</h3>

<ol>
<li>继续添加 feature/creating_project.feature, 添加完之后，重构此文件，引入Background:</li>
<li>编辑 app/model/project.rb, 注意版本区别</li>
<li><p>进入控制台</p>

<pre><code> rails c
</code></pre></li>
<li><p>运行几个命令</p>

<pre><code> Project.create
 Project.create!
 Project.create!(:name =&gt; "TextMate 2")
</code></pre></li>
<li><p>编辑app/controllers/projcets_controller.rb</p></li>
<li><p>添加gem， 一个不添加gem，使用plugin的方法</p>

<pre><code> rails plugin install git://github.com/rails/dymamic_form.git
</code></pre></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rails 3 in Action 随记001]]></title>
    <link href="http://Zane5.github.com/blog/2013/04/25/rails-3-in-action-sui-ji-001/"/>
    <updated>2013-04-25T23:46:00+08:00</updated>
    <id>http://Zane5.github.com/blog/2013/04/25/rails-3-in-action-sui-ji-001</id>
    <content type="html"><![CDATA[<p>早看完了</p>

<pre><code>《Web开发敏捷之道:应用Rails进行敏捷Web开发》
《Agile Web Development with Rails, Fourth Edition》 
</code></pre>

<p>若按照这本书写的去做web，基本用不到啥gem，因为这本书根本没讲。此书介绍中特意写到，面向初、中级读者，所以实际动手开发，还是不成，忒不优雅。接下来，就看这本：</p>

<pre><code>《Rails 3 in Action》
</code></pre>

<h2>第一章</h2>

<p>Ruby on Rails, the framework, 做了个小小的介绍，如果看过任何ROR教程，此章均是套话。有点小代码，举了个小栗子。呆丸章</p>

<h2>第二章</h2>

<p>Testing saves your bacon, 讲解了测试驱动开发,行为驱动开发 Test and behavior driven development, 很简单的引入，呆丸章，读起来异常舒坦 XD</p>

<h2>版本问题</h2>

<p>这本书是</p>

<pre><code>rails 3.1.0
ruby 1.9.2
</code></pre>

<p>我见过很多朋友表达版本上的顾虑，在此偶做 <strong>骚诗</strong>三句半一首，</p>

<pre><code>厨师不嫌热，
杀手不晕血，
程序亦不容，
青楼做赋不尽言。
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[helloAgain]]></title>
    <link href="http://Zane5.github.com/blog/2013/04/25/helloagain/"/>
    <updated>2013-04-25T22:39:00+08:00</updated>
    <id>http://Zane5.github.com/blog/2013/04/25/helloagain</id>
    <content type="html"><![CDATA[
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Hello World]]></title>
    <link href="http://Zane5.github.com/blog/2012/10/24/hello-world/"/>
    <updated>2012-10-24T21:12:00+08:00</updated>
    <id>http://Zane5.github.com/blog/2012/10/24/hello-world</id>
    <content type="html"><![CDATA[
]]></content>
  </entry>
  
</feed>
